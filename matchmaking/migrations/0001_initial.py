# Generated by Django 5.2.4 on 2025-07-24 12:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BuddyRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(help_text='活动类型', max_length=100)),
                ('description', models.TextField(help_text='描述')),
                ('start_time', models.DateTimeField(help_text='开始时间')),
                ('end_time', models.DateTimeField(help_text='结束时间')),
                ('max_participants', models.PositiveIntegerField(help_text='最大参与人数')),
                ('status', models.CharField(choices=[('open', '开放'), ('closed', '关闭')], default='open', help_text='状态', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddy_requests', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddy_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '搭子请求',
                'verbose_name_plural': '搭子请求',
            },
        ),
        migrations.CreateModel(
            name='BuddyMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', '待确认'), ('accepted', '已接受'), ('rejected', '已拒绝')], default='pending', help_text='匹配状态', max_length=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matched_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddy_matches', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='matchmaking.buddyrequest')),
            ],
            options={
                'verbose_name': '搭子匹配',
                'verbose_name_plural': '搭子匹配',
            },
        ),
        migrations.CreateModel(
            name='BuddyRequestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(help_text='标签名称（如：编程、组队）', max_length=50)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='matchmaking.buddyrequest')),
            ],
            options={
                'verbose_name': '搭子请求标签',
                'verbose_name_plural': '搭子请求标签',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1星'), (2, '2星'), (3, '3星'), (4, '4星'), (5, '5星')], help_text='评分（1-5星）')),
                ('comment', models.TextField(blank=True, help_text='评价内容', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户反馈',
                'verbose_name_plural': '用户反馈',
            },
        ),
        migrations.AddIndex(
            model_name='buddyrequest',
            index=models.Index(fields=['user'], name='matchmaking_user_id_2a3b62_idx'),
        ),
        migrations.AddIndex(
            model_name='buddyrequest',
            index=models.Index(fields=['event'], name='matchmaking_event_i_80b4b5_idx'),
        ),
        migrations.AddIndex(
            model_name='buddyrequest',
            index=models.Index(fields=['status'], name='matchmaking_status_5b1b5b_idx'),
        ),
        migrations.AddIndex(
            model_name='buddyrequest',
            index=models.Index(fields=['start_time'], name='matchmaking_start_t_c44143_idx'),
        ),
        migrations.AddIndex(
            model_name='buddyrequest',
            index=models.Index(fields=['activity_type'], name='matchmaking_activit_58f518_idx'),
        ),
        migrations.AddIndex(
            model_name='buddymatch',
            index=models.Index(fields=['request'], name='matchmaking_request_d924e5_idx'),
        ),
        migrations.AddIndex(
            model_name='buddymatch',
            index=models.Index(fields=['matched_user'], name='matchmaking_matched_31b4ff_idx'),
        ),
        migrations.AddIndex(
            model_name='buddymatch',
            index=models.Index(fields=['status'], name='matchmaking_status_01a46d_idx'),
        ),
        migrations.AddIndex(
            model_name='buddymatch',
            index=models.Index(fields=['matched_at'], name='matchmaking_matched_ecbf20_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='buddymatch',
            unique_together={('request', 'matched_user')},
        ),
        migrations.AddIndex(
            model_name='buddyrequesttag',
            index=models.Index(fields=['tag_name'], name='matchmaking_tag_nam_337ff1_idx'),
        ),
        migrations.AddIndex(
            model_name='buddyrequesttag',
            index=models.Index(fields=['request'], name='matchmaking_request_4abfae_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='buddyrequesttag',
            unique_together={('request', 'tag_name')},
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['from_user'], name='matchmaking_from_us_b57e3d_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['to_user'], name='matchmaking_to_user_cea98e_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['rating'], name='matchmaking_rating_e8c331_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['created_at'], name='matchmaking_created_c37773_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfeedback',
            unique_together={('from_user', 'to_user')},
        ),
    ]
